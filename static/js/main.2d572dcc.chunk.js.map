{"version":3,"sources":["image-assets/esl-q-logo.svg","components/Home.js","components/About.js","components/QuizForm.js","components/Quiz.js","components/App.js","components/Nav.js","reportWebVitals.js","index.js"],"names":["Home","className","src","eslqlogo","alt","this","props","isAuthed","to","React","Component","About","href","getRange","num","Array","keys","QuizForm","state","topics","selectedTopic","undefined","l1","numParagraphs","numQuestions","maxPara","maxQues","event","value","target","setState","console","log","axios","post","then","response","data","length","parseInt","Form","Group","controlId","Label","Control","as","name","onChange","handleL1Change","bind","handleTopicChange","map","item","replace","defaultValue","handleNumParaChange","handleNumQuesChange","onClick","handler","GetLoadAnimation","useLoading","loading","indicator","width","containerProps","indicatorEl","QuizContent","passage","passageLoading","quiz","quizLoading","quizDone","resultObject","topic","numPara","numQues","formatAPIResponse","questions","allAnswers","Map","forEach","q","answers","i","Math","floor","random","splice","toString","getAnswers","synopsis","questionObject","push","obj","questionDivs","question","correctAnswer","messageForIncorrectAnswer","explanation","numberOfCorrectAnswers","numberOfQuestions","quizCompleteAction","para","continueTillCorrect","showDefaultResult","onComplete","renderCustomResultPage","App","topicsLoading","quizFormHandler","get","history","browserHistory","onUpdate","window","scrollTo","path","component","SiteNavbar","Navbar","expand","fixed","Brand","Nav","Link","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d572dcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/esl-q-logo.2daf62c2.svg\";","/*\r\n Welcome/Home page of application\r\n*/\r\nimport React from 'react';\r\nimport { Link } from 'react-router';\r\n\r\nimport '../css/App.css';\r\nimport eslqlogo from '../image-assets/esl-q-logo.svg';\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <body className=\"App-body\">\r\n            <div className=\"Home\">\r\n                <img src={eslqlogo} className=\"App-logo\" alt=\"logo\" />\r\n                <h1>Welcome to the ESL Question Targeter {this.props.isAuthed}</h1>\r\n                <p>\r\n                This application provides reading comprehension questions for English as a Second Language learners with a focus on cherry-picking better questions for you based on how different they are from your native lanugage (L1). \r\n                \r\n                The theory is that if you get extra practice with questions that might be harder for you, it can help you get familiar with these differences and improve your learning experience.\r\n                </p>\r\n                <Link to=\"/about\" className=\"link-text\"><p>\r\n                    Learn more about the research on the About page\r\n                </p>\r\n                </Link>\r\n                <Link to=\"/quizform\"><button className=\"myButton\">\r\n                    Click Here to Get Started!\r\n                </button>\r\n                </Link>\r\n            </div></body>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","/*\r\n About page of application: talks about the research, implications, assumptions, and future work\r\n*/\r\nimport React from 'react';\r\n\r\nimport '../css/App.css';\r\nimport '../css/About.css';\r\n\r\nexport default class About extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"About\">\r\n        <body className=\"App-body\">\r\n          <h1>About</h1>\r\n          <div className=\"about-text\">\r\n            <h3>What does L1 mean?</h3>\r\n            <p>L1 is a language learner's native (first) language.</p>\r\n            <h3>Why does L1 matter in ESL learning?</h3>\r\n            <p>An estimated 42% of errors in ESL students are caused by L1 influence <a href=\"https://r-libre.teluq.ca/1394/1/pichette122%20as%20published.pdf\">[cite]</a>. This shows that L1 is a major factor in the way that English learners approach ESL and offers an opportunity to target training in those predictable errors.</p>\r\n            <h3>What do we mean by L1 targeting?</h3>\r\n            <p>In order to select the most relevant questions for a specific L1, we order questions by a generated contrasive score and select the highest. The theory behind this work is that English content with more features that are different from a student's L1 will cause more difficulty for the student. This added difficulty presents the opportunity for the student to be exposed to these difficuly concepts early and often to increase understanding and reduce future errors.</p>\r\n            <h3>How do we generate this contrastive score?</h3>\r\n            <p>Using the <a href=\"https://cloud.google.com/translate/\">Google Translate API</a> we translate both the question text and the surrounding context paragraph into the given L1. We then process both the English and L1 versions of the text using the respective language models from the Python Natural Language Processing library <a href=\"https://spacy.io/\">spaCy</a> to extract the linguistic features of the text such as parts-of-speech, verb form, and semantic similarities. Finally, these features are used to generate a numeric representation of how different the English and L1 text versions are and this number is called the contrastive score.</p>\r\n            <h3>Learn More:</h3>\r\n            <p>See a video presentation of this project <a href=\"\">HERE</a></p>\r\n            <p>For a more detailed explanation of this work and the research behind it, see the project paper <a href=\"\">HERE</a></p>\r\n            <p>All of the source code for this UI and the backend API can be found on GitHub <a href=\"https://github.com/byramag/ESL-L1-question-targeting\">HERE</a></p>\r\n            <p>This project was created by <a href=\"https://www.linkedin.com/in/abigailbyram/\">Abigail Byram</a> for Georgia Tech's graduate course CS6460: Educational Technology.</p>\r\n          </div>\r\n        </body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\n Quiz page: handles the actual question interation and answers\r\n*/\r\nimport React from 'react';\r\nimport { Link } from 'react-router';\r\nimport { Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport '../css/Quiz.css';\r\n\r\nfunction getRange(num) {\r\n  return [...Array(num).keys()]\r\n}\r\n\r\nclass QuizForm extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      topics: this.props.topics,\r\n      selectedTopic: undefined,\r\n      l1: '',\r\n      numParagraphs: 1,\r\n      numQuestions: 1,\r\n      maxPara: 1,\r\n      maxQues: 1\r\n    }\r\n  }\r\n\r\n  handleTopicChange(event) {\r\n    let value = event.target.value;\r\n    this.setState({ selectedTopic: value }, () => {\r\n      console.log('topic is now ' + this.state.selectedTopic)\r\n    });\r\n    axios.post(\"https://esl-question-generator-qadjhsafva-ue.a.run.app/passage\", \r\n    {\r\n        \"Title\": value,\r\n        \"NumParagraphs\": 0\r\n    })\r\n    .then(response => {\r\n      this.setState({ maxPara: response.data.length });\r\n      console.log(this.state.maxPara)\r\n    });\r\n  }\r\n  handleNumParaChange(event) {\r\n    let value = parseInt(event.target.value);\r\n    this.setState({ numParagraphs: value}, () => {\r\n      console.log('num para is now ' + this.state.numParagraphs)\r\n    });\r\n    axios.post(\"https://esl-question-generator-qadjhsafva-ue.a.run.app/questions\", \r\n    {\r\n        \"Title\": this.state.selectedTopic,\r\n        \"NumParagraphs\": value,\r\n        \"NumQuestions\": 0,\r\n        \"L1Target\": \"\" // no L1 to speed up call\r\n    })\r\n    .then(response => {\r\n      this.setState({ maxQues: response.data['Questions'].length });\r\n      console.log(this.state.maxQues)\r\n    });\r\n  }\r\n  handleL1Change(event) {\r\n    let value = event.target.value;\r\n    this.setState({ l1: value}, () => {\r\n      console.log('L1 is now ' + this.state.l1)\r\n    });\r\n  }\r\n  handleNumQuesChange(event) {\r\n    let value = parseInt(event.target.value);\r\n    this.setState({ numQuestions: value}, () => {\r\n      console.log('num ques is now ' + this.state.numQuestions)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Quiz\">\r\n        <header>\r\n          <h2>Fill in the information below to get started</h2>\r\n        </header>\r\n        <body className=\"QuizForm\">\r\n        <Form>\r\n          <Form.Group className=\"QuizFormElement\" controlId=\"l1Select\">\r\n            <Form.Label className=\"QuizFormLabel\" >What is your native language?</Form.Label>\r\n            <Form.Control\r\n                  as=\"select\" \r\n                  name='l1'\r\n                  onChange={this.handleL1Change.bind(this)}>\r\n              <option>None of these</option>\r\n              <option>Chinese</option>\r\n              <option>French</option>\r\n              <option>Japanese</option>\r\n              <option>Spanish</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"QuizFormElement\" controlId=\"topicSelect\">\r\n            <Form.Label className=\"QuizFormLabel\" >Select a topic to read about</Form.Label>\r\n            <Form.Control\r\n                as=\"select\" \r\n                name='topic' \r\n                onChange={this.handleTopicChange.bind(this)}>\r\n                  <option>Select a Topic</option>\r\n                  {this.state.topics.map(item => (\r\n                    <option\r\n                      key={item}\r\n                      value={item}>\r\n                      {item.replace(/_/g, ' ')}\r\n                    </option>\r\n                  ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"QuizFormElement\" controlId=\"numParaRange\">\r\n            <Form.Label className=\"QuizFormLabel\" >Number of paragraphs to read (maximum depends on the topic you selected)</Form.Label>\r\n            <Form.Control\r\n                  as=\"select\"\r\n                  name='numParagraphs' \r\n                  defaultValue='All'\r\n                  onChange={this.handleNumParaChange.bind(this)}>\r\n              {getRange(this.state.maxPara).map(item => (\r\n                <option\r\n                  key={item+1}\r\n                  value={item+1}>\r\n                  {item+1}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          {/* <Form.Group>\r\n            <Form.Label>Randomize paragraphs? (this will give more variety of questions)</Form.Label>\r\n            <Form.Check \r\n                type={\"checkbox\"}\r\n                value={this.randomizePara}\r\n              />\r\n          </Form.Group> */}\r\n          <Form.Group className=\"QuizFormElement\" controlId=\"formBasicRange\">\r\n            <Form.Label className=\"QuizFormLabel\" >Number of questions (maximum will scale with number of paragraphs)</Form.Label>\r\n            <Form.Control\r\n                  as=\"select\"\r\n                  name='numQuestions' \r\n                  defaultValue='All'\r\n                  onChange={this.handleNumQuesChange.bind(this)}>\r\n              {getRange(this.state.maxQues).map(item => (\r\n                <option\r\n                  key={item+1}\r\n                  value={item+1}>\r\n                  {item+1}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          {/* <Form.Group>\r\n            <Form.Label>Number of questions (max will scale with number of paragraphs)</Form.Label>\r\n            <RangeSlider\r\n              value={this.numQuestions}\r\n              onChange={e => this.numQuestions=e.target.value}\r\n              min={1}\r\n              max={this.topics.length}\r\n            />\r\n          </Form.Group> */}\r\n          <Link to=\"/quiz\"><button className=\"myButton\" onClick={() =>\r\n            this.props.handler(this.state.l1, this.state.selectedTopic, \r\n              this.state.numParagraphs, this.state.numQuestions)}>\r\n              Start Quiz\r\n          </button>\r\n          </Link>\r\n        </Form>\r\n        </body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizForm;\r\n","/*\r\n Quiz page: handles the actual question interation and answers\r\n*/\r\nimport React from 'react';\r\nimport { Link } from 'react-router';\r\nimport axios from 'axios';\r\nimport { useLoading, Puff } from '@agney/react-loading';\r\n\r\nimport '../css/App.css';\r\nimport '../css/Quiz.css';\r\n\r\nimport Quiz from 'react-quiz-component';\r\n\r\nfunction GetLoadAnimation() {\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <Puff width=\"50\" />,\r\n    });\r\n\r\n    return (\r\n    <section {...containerProps}>\r\n        {indicatorEl}\r\n    </section>\r\n    );\r\n}\r\n\r\nclass QuizContent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            passage: undefined,\r\n            passageLoading: true,\r\n            quiz: undefined,\r\n            quizLoading: true,\r\n            quizDone: false\r\n        }\r\n        this.resultObject = {}\r\n\r\n        this.topic = props.topic;\r\n        this.l1 = props.l1;\r\n        this.numPara = props.numPara;\r\n        this.numQues  = props.numQues;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(\"https://esl-question-generator-qadjhsafva-ue.a.run.app/passage\",\r\n        {\r\n            \"Title\": this.topic,\r\n            \"NumParagraphs\": parseInt(this.numPara)\r\n        })\r\n        .then(response => {\r\n          this.setState({ passage: response.data });\r\n          this.setState({ passageLoading: false });\r\n          console.log(this.state.passage)\r\n        });\r\n        axios.post(\"https://esl-question-generator-qadjhsafva-ue.a.run.app/questions\",\r\n        {\r\n            \"Title\": this.topic,\r\n            \"NumParagraphs\": parseInt(this.numPara),\r\n            \"NumQuestions\": parseInt(this.numQues),\r\n            \"L1Target\": this.l1\r\n        })\r\n        .then(response => {\r\n          this.setState({ quiz: this.formatAPIResponse(response.data) });\r\n          this.setState({ quizLoading: false });\r\n          console.log(this.state.quiz)\r\n        });\r\n      }\r\n\r\n    getAnswers(questions) {\r\n        let allAnswers = new Map()\r\n        questions.forEach(function(q) {\r\n            var answers = q['distractors']\r\n            var i = Math.floor(Math.random() * answers.length); \r\n            answers.splice(i, 0, q['answer']) \r\n            allAnswers[q['question']] = [answers, (i+1).toString()]\r\n        });\r\n        return allAnswers\r\n    }\r\n\r\n    formatAPIResponse(response) {\r\n        console.log(response)\r\n        let answers = this.getAnswers(response['Questions'])\r\n        console.log(answers)\r\n        let synopsis = this.l1 ? \"These selected questions have features that might make them more difficult for native \" + this.l1 + \" speakers, so they'll give you extra practice.\" : \"This is the default ordering of reading comprehension questions not targeted toward any particular native language\"\r\n        let questionObject = {\r\n            \"quizTitle\": this.props.topic.replace(/_/g, ' '),\r\n            \"quizSynopsis\": synopsis,\r\n            \"questions\": []\r\n        }\r\n        response['Questions'].forEach(q => \r\n            questionObject['questions'].push({\r\n                \"question\": q[\"question\"],\r\n                \"questionType\": \"text\",\r\n                \"answerSelectionType\": \"single\",\r\n                \"answers\": answers[q[\"question\"]][0],\r\n                \"correctAnswer\": answers[q[\"question\"]][1],\r\n                \"messageForCorrectAnswer\": \"Correct answer. Good job.\",\r\n                \"messageForIncorrectAnswer\": \"Answer can be found in paragraph: \" + q[\"context\"],\r\n                \"explanation\": q[\"ranking_metadata\"][\"explanation\"],\r\n                \"point\": \"1\"\r\n            })\r\n        );\r\n        return questionObject;\r\n    }\r\n\r\n    renderCustomResultPage(obj) {\r\n        console.log('inside custom result func')\r\n        console.log(obj.questions);\r\n        const questionDivs = obj.questions.map((q, i) =>\r\n            <div className=\"review\">\r\n                <h3>Question {i+1}: {q.question}</h3>\r\n                <br/>\r\n                <h4>Correct Answer:</h4>\r\n                <p>{q.answers[parseInt(q.correctAnswer)-1]}</p>\r\n                <br/>\r\n                <h4>Where was this answer in context?</h4>\r\n                <p>{q.messageForIncorrectAnswer}</p>\r\n                <br/>\r\n                <h4>Why was this chosen for you as a native {this.l1} speaker?</h4>\r\n                <p>{q.explanation}</p>\r\n            </div>\r\n        );\r\n        return <div>\r\n            <h2>Question Review</h2>\r\n            <h3>Corretly answered {obj.numberOfCorrectAnswers} out of {obj.numberOfQuestions} questions</h3>\r\n            <div>{questionDivs}</div>\r\n            <div>\r\n                <Link to=\"/quizform\"><button className=\"myButton\">\r\n                    Start another quiz\r\n                </button>\r\n                </Link>\r\n                <Link to=\"/\"><button className=\"myButton\">\r\n                    Go back to home\r\n                </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        const quizCompleteAction = (obj) => {\r\n            this.setState({quizDone: true});\r\n            this.resultObject = obj;\r\n            console.log('inside quiz complete action');\r\n        }\r\n        const renderPassage = (obj) => {\r\n            if( ! this.state.passageLoading ) { \r\n                return (\r\n                    <div className='readPassage'>\r\n                        <h2>{this.topic.replace(/_/g, ' ')}</h2>\r\n                        {this.state.passage.map(para => (\r\n                            <p>{para}</p>\r\n                        ))}\r\n                    </div>)\r\n            } else {\r\n            return <div><p>Passage loading...</p><GetLoadAnimation /></div>\r\n            }\r\n        }\r\n        const renderQuiz = (obj) => {\r\n            if( ! this.state.quizLoading ) { \r\n                return (\r\n                    <div>\r\n                        <Quiz className='quiz' \r\n                            quiz={this.state.quiz} \r\n                            // showInstantFeedback={true}\r\n                            continueTillCorrect={true}\r\n                            showDefaultResult={false}\r\n                            onComplete={quizCompleteAction}\r\n                        />\r\n                    </div>)\r\n            } else {\r\n                return <div><p>Quiz loading... If the passage is long, this may take a while. Go ahead and start reading!</p><GetLoadAnimation /></div>\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"Quiz\">\r\n            <header>\r\n                <h2>Read the passage below, then scroll down to begin answering questions</h2>\r\n            </header>\r\n            <body className=\"Quiz-body\">\r\n                { renderPassage() }\r\n                { renderQuiz() }\r\n                {this.state.quizDone ? this.renderCustomResultPage(this.resultObject) : \"\"}\r\n            </body>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizContent;\r\n","/*\n Handles the shared functionalities between components\n*/\nimport React from 'react';\nimport { Router, Route, browserHistory } from 'react-router';\nimport axios from 'axios';\n\nimport '../css/App.css';\n\nimport Home from './Home'\nimport About from './About'\nimport QuizForm from './QuizForm'\nimport QuizContent from './Quiz'\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n\n    const loadStatusUpdate = () => {\n      this.setState({topicsLoading: false})\n    }\n    this.state = {\n      l1: '',\n      topics: undefined,\n      selectedTopic: 'Oxygen',\n      numParagraphs: 0,\n      numQuestions: 0,\n      topicsLoading: true,\n    }\n    console.log('in app default state ' + this.state.l1 + ' ' + this.state.selectedTopic)\n    this.quizFormHandler = this.quizFormHandler.bind(this)\n    console.log(this.state.topics)\n  }\n\n  componentDidMount() {\n    axios.get(\"https://esl-question-generator-qadjhsafva-ue.a.run.app/passages\").then(response => {\n      this.setState({ topics: response.data });\n      this.setState({ topicsLoading: false });\n      console.log(this.state.topics)\n    });\n  }\n\n  quizFormHandler( l1, topic, numPara, numQues ) {\n    this.setState({l1: l1})\n    if(topic){\n      this.setState({selectedTopic: topic})\n    }\n    this.setState({numParagraphs: numPara})\n    this.setState({numQuestions: numQues}, () => {\n      console.log('in app got state ' + this.state.l1 + ' ' + this.state.selectedTopic);})\n  }\n  getRequestObj() {\n    return {\n      \"Title\": this.state.topic,\n      \"NumParagraphs\": this.state.numParagraphs,\n      \"NumQuestions\": this.state.numQuestions,\n      \"L1Target\": this.state.l1\n    }\n  }\n\n  render() {\n    if(this.state.topicsLoading){\n      return null\n    }\n    return (\n      <div className=\"App\">\n        <Router history={browserHistory} onUpdate={() => window.scrollTo(0, 0)}>\n          <Route path=\"/\" component={() => <Home />} />\n          <Route path=\"/about\" component={() => <About /> } />\n          <Route path=\"/quizform\" component={() =>  \n            <QuizForm topics={this.state.topics} handler={this.quizFormHandler}/> } />\n          <Route path=\"/quiz\" component={() =>  \n            <QuizContent l1={this.state.l1} topic={this.state.selectedTopic} numPara={this.state.numParagraphs} numQues={this.state.numQuestions}/> } />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*\r\n Navigation bar used in every component\r\n*/\r\nimport React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nimport '../css/Nav.css'\r\nimport eslqlogo from '../image-assets/esl-q-logo.svg';\r\n\r\n\r\nfunction SiteNavbar(){\r\n    return(\r\n        <div>\r\n            <Navbar className=\"Navbar\" expand=\"lg\" fixed=\"top\">\r\n                <Navbar.Brand>\r\n                    <a href=\"/test\">\r\n                        <img src={eslqlogo} className=\"logo\" />\r\n                    </a>\r\n                </Navbar.Brand>\r\n                <Nav.Link className=\"Nav-block\" href=\"/\">Home</Nav.Link>\r\n                <Nav.Link className=\"Nav-block\" href=\"/about\">About</Nav.Link>\r\n                <Nav.Link className=\"Nav-block\" href=\"/quizform\">Get Questions</Nav.Link>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SiteNavbar;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport SiteNavbar from './components/Nav';\n// import Interface from './QuestionAPIInterface';\nimport reportWebVitals from './reportWebVitals';\nimport { Router, Route, IndexRoute, useRouterHistory } from 'react-router';\nimport { createHashHistory } from 'history';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SiteNavbar />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}